version: "3"

volumes:
  db-data:

services:
  backend:
    build: "./backend"
    ports:
      - "8000:8000"
    # volumes:
    #   - ./backend:/app
    command:
      # [ "poetry", "run", "uwsgi", "--ini", "/app/uwsgi.ini"]
      bash -c "python manage.py makemigrations --settings=config.settings.local &&
      python manage.py migrate --settings=config.settings.local &&
      python manage.py runserver 0.0.0.0:8000 --settings=config.settings.local "
      # poetry run uwsgi --ini /app/uwsgi.ini
      # bash -c "python3 manage.py makemigrations --settings=config.settings.local &&
      # python3 manage.py migrate --settings=config.settings.local &&
      # uwsgi --socket :8001 --module config.wsgi --logto /tmp/uwsgi.log
      # uwsgi --ini /app/uwsgi.ini "
    tty: true
    depends_on:
      - db
    links:
      - db

  frontend:
    build: './frontend'
    ports:
      - '8080:8080'
    volumes:
      - ./frontend:/app
    command: ["npm", "run", "serve"]

  db:
    image: postgres
    volumes:
      - "db-data:/var/lib/postgresql/data"
    environment:
      - "POSTGRES_DB=postgres"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "5432:5432"

  # nginx:
  #   build: "./nginx/"
  #   # container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/conf/uwsgi_params:/etc/nginx/uwsgi_params
  #     - ./backend/app/tmp/sockets/uwsgi.sock:/app/tmp/sockets/uwsgi.sock
  #     # - ./backend/static:/static
  #   links:
  #     - backend
  #   depends_on:
  #     - backend
